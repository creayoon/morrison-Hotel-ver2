{
  "swagger" : "2.0",
  "info" : {
    "description" : "This is a sample server Petstore server.  You can find \nout more about Swagger at \n[http://swagger.io](http://swagger.io) or on \n[irc.freenode.net, #swagger](http://swagger.io/irc/).\n",
    "version" : "v1",
    "title" : "Swagger Petstore",
    "termsOfService" : "http://swagger.io/terms/",
    "contact" : {
      "email" : "apiteam@swagger.io"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host" : "virtserver.swaggerhub.com",
  "basePath" : "/morrison/morrison/1.0.0",
  "tags" : [ {
    "name" : "user",
    "description" : "Operations about user",
    "externalDocs" : {
      "description" : "Find out more about our store",
      "url" : "http://swagger.io"
    }
  }, {
    "name" : "room",
    "description" : "Access to room info"
  } ],
  "schemes" : [ "https", "http" ],
  "paths" : {
    "/user" : {
      "post" : {
        "tags" : [ "user" ],
        "summary" : "Create user",
        "description" : "This can only be done by the logged in user.",
        "operationId" : "createUser",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Created user object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/user/{username}" : {
      "get" : {
        "tags" : [ "user" ],
        "summary" : "Get user by user name",
        "operationId" : "getUserByName",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "The name that needs to be fetched. Use user1 for testing.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "400" : {
            "description" : "Invalid username supplied"
          },
          "404" : {
            "description" : "User not found"
          }
        }
      },
      "put" : {
        "tags" : [ "user" ],
        "summary" : "Updated user",
        "description" : "This can only be done by the logged in user.",
        "operationId" : "updateUser",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "name that need to be updated",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Updated user object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid user supplied"
          },
          "404" : {
            "description" : "User not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "user" ],
        "summary" : "Delete user",
        "description" : "This can only be done by the logged in user.",
        "operationId" : "deleteUser",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "The name that needs to be deleted",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid username supplied"
          },
          "404" : {
            "description" : "User not found"
          }
        }
      }
    },
    "/room" : {
      "post" : {
        "tags" : [ "room" ],
        "summary" : "Create room",
        "description" : "This can only be done by the logged in room.",
        "operationId" : "createRoom",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Created user object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Room"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/room/{roomname}" : {
      "get" : {
        "tags" : [ "room" ],
        "summary" : "Get room by room name",
        "operationId" : "getRoomByName",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "roomname",
          "in" : "path",
          "description" : "The name that needs to be fetched. Use room1 for testing.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Room"
            }
          },
          "400" : {
            "description" : "Invalid roomname supplied"
          },
          "404" : {
            "description" : "Room not found"
          }
        }
      },
      "put" : {
        "tags" : [ "room" ],
        "summary" : "Updated room",
        "description" : "This can only be done by the logged in room.",
        "operationId" : "updateRoom",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "roomname",
          "in" : "path",
          "description" : "name that need to be updated",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Updated room object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Room"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid room supplied"
          },
          "404" : {
            "description" : "Room not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "room" ],
        "summary" : "Delete room",
        "description" : "This can only be done by the logged in room.",
        "operationId" : "deleteRoom",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "roomname",
          "in" : "path",
          "description" : "The name that needs to be deleted",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid roomname supplied"
          },
          "404" : {
            "description" : "Room not found"
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "petstore_auth" : {
      "type" : "oauth2",
      "authorizationUrl" : "http://petstore.swagger.io/oauth/dialog",
      "flow" : "implicit",
      "scopes" : {
        "write:pets" : "modify pets in your account",
        "read:pets" : "read your pets"
      }
    },
    "api_key" : {
      "type" : "apiKey",
      "name" : "api_key",
      "in" : "header"
    }
  },
  "definitions" : {
    "User" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "social" : {
          "type" : "string"
        },
        "image" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "User"
      }
    },
    "Room" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "defaultPrice" : {
          "type" : "integer",
          "format" : "int32"
        },
        "roomNumber" : {
          "type" : "integer",
          "format" : "int32"
        },
        "roomType" : {
          "type" : "string"
        },
        "facility" : {
          "$ref" : "#/definitions/Room_facility"
        },
        "roomSize" : {
          "type" : "string"
        },
        "bedSize" : {
          "type" : "string"
        },
        "availableGuest" : {
          "type" : "integer",
          "format" : "int32"
        },
        "acceptChild" : {
          "type" : "integer",
          "format" : "int32"
        },
        "blueprint" : {
          "type" : "string"
        },
        "image" : {
          "$ref" : "#/definitions/Room_facility"
        },
        "roomName" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "Room"
      }
    },
    "ApiResponse" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "type" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "Room_facility" : {
      "properties" : {
        "items" : {
          "type" : "string"
        }
      }
    }
  },
  "externalDocs" : {
    "description" : "Find out more about Swagger",
    "url" : "http://swagger.io"
  }
}